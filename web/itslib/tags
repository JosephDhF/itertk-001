!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BOOL	inc/def.h	/^typedef signed int              BOOL;$/;"	t
BUFSIZE	src/utelnetd.c	86;"	d	file:
BYTE	inc/def.h	/^typedef unsigned char           BYTE;$/;"	t
CLOCKS_PER_MSEC	inc/def.h	86;"	d
CONFIG_COM	inc/config.h	/^} CONFIG_COM;$/;"	t	typeref:struct:tagCONFIG_COM
CONFIG_LIMIT	inc/config.h	/^}CONFIG_LIMIT;$/;"	t	typeref:struct:tagCONFIG_LIMIT
CONFIG_MODE	inc/config.h	/^} CONFIG_MODE;$/;"	t	typeref:struct:tagCONFIG_MODE
CONFIG_SESSION	inc/config.h	/^}CONFIG_SESSION;$/;"	t	typeref:struct:tagCONFIG_SESSION
CONFIG_SYS	inc/config.h	/^} CONFIG_SYS;$/;"	t	typeref:struct:tagCONFIG_SYS
CONFI_DATA	inc/config.h	/^} CONFI_DATA;$/;"	t	typeref:struct:tagCONFIG_DATA
CONF_COM	inc/cmd_def.h	/^    CONF_COM,$/;"	e	enum:__anon2
CONF_LIMIT	inc/cmd_def.h	/^    CONF_LIMIT,$/;"	e	enum:__anon2
CONF_MODE	inc/cmd_def.h	/^    CONF_MODE,$/;"	e	enum:__anon2
CONSOLE	inc/console.h	/^} CONSOLE;$/;"	t	typeref:struct:tagCONSOLE
CON_MAX_NUM	inc/console.h	25;"	d
CON_PORT	inc/console.h	24;"	d
CR	inc/config.h	/^    BYTE  CR;$/;"	m	struct:tagCONFIG_MODE
DEBUG_OUT	src/utelnetd.c	113;"	d	file:
DEBUG_OUT	src/utelnetd.c	115;"	d	file:
DTR	inc/config.h	/^    BYTE  DTR;$/;"	m	struct:tagCONFIG_COM
DWORD	inc/def.h	/^typedef unsigned int            DWORD;$/;"	t
ERROR_PSW	inc/cmd_def.h	/^	ERROR_PSW,$/;"	e	enum:USER_LOGIN
EXEC	Makefile	/^EXEC = cli$/;"	m
FAILURE	inc/def.h	96;"	d
FOR	inc/def.h	89;"	d
GCC	Makefile	/^GCC = $(CROSS)gcc$/;"	m
HANDLE	inc/def.h	/^typedef void *                  HANDLE;$/;"	t
HelpMsg	inc/console.h	/^    char	*HelpMsg;$/;"	m	struct:__anon1
INC	Makefile	/^INC	=.\/inc\/$/;"	m
ISSUE_FILE	src/utelnetd.c	88;"	d	file:
ITSIP	inc/itsip.h	/^} ITSIP, *p_ITSIP;$/;"	t	typeref:struct:tagITSIP
ITSIP_PACKET	inc/itsip.h	/^} ITSIP_PACKET, *p_ITSIP_PACKET;$/;"	t	typeref:struct:tagITSIP_PKT
ITSIP_THLEN	inc/itsip.h	27;"	d
ITSIP_VERSION	inc/itsip.h	25;"	d
ITS_ACK_CONF_QUERY	inc/itsip.h	/^    ITS_ACK_CONF_QUERY    = 0xb2,\/*!< ACK for configuration query *\/$/;"	e	enum:ITS_CMD
ITS_ACK_CONF_SET	inc/itsip.h	/^    ITS_ACK_CONF_SET      = 0xb3,\/*!< ACK for configuration setup *\/$/;"	e	enum:ITS_CMD
ITS_ACK_CONN_TEST	inc/itsip.h	/^    ITS_ACK_CONN_TEST     = 0xb8,\/*!< ACK for Network connection test *\/$/;"	e	enum:ITS_CMD
ITS_ACK_DELETE	inc/itsip.h	/^    ITS_ACK_DELETE        = 0xb9,\/*!< ACK for file remove *\/$/;"	e	enum:ITS_CMD
ITS_ACK_KEEPLIVE	inc/itsip.h	/^    ITS_ACK_KEEPLIVE      = 0xbd,\/*!< ACK for keep-alive *\/$/;"	e	enum:ITS_CMD
ITS_ACK_LOGIN	inc/itsip.h	/^    ITS_ACK_LOGIN         = 0xb0,\/*!< ACK for user Login *\/$/;"	e	enum:ITS_CMD
ITS_ACK_LOGOUT	inc/itsip.h	/^    ITS_ACK_LOGOUT        = 0xba,\/*!< ACK for Logout *\/$/;"	e	enum:ITS_CMD
ITS_ACK_LOG_QUERY	inc/itsip.h	/^    ITS_ACK_LOG_QUERY     = 0xb4,\/*!< ACK for log query *\/$/;"	e	enum:ITS_CMD
ITS_ACK_SYSINFO_QUERY	inc/itsip.h	/^    ITS_ACK_SYSINFO_QUERY = 0xb1,\/*!< ACK for System information query *\/$/;"	e	enum:ITS_CMD
ITS_ACK_SYSUP_LOGIN	inc/itsip.h	/^    ITS_ACK_SYSUP_LOGIN   = 0xb7,\/*!< ACK for system upgrade login *\/$/;"	e	enum:ITS_CMD
ITS_ACK_SYS_UP	inc/itsip.h	/^    ITS_ACK_SYS_UP        = 0xb6,\/*!< ACK for system upgrade *\/$/;"	e	enum:ITS_CMD
ITS_ACK_TALK_REQ	inc/itsip.h	/^    ITS_ACK_TALK_REQ      = 0xbc,\/*!< ACK for talking request *\/$/;"	e	enum:ITS_CMD
ITS_ACK_TIME_SET	inc/itsip.h	/^    ITS_ACK_TIME_SET      = 0xbb,\/*!< ACK for time setup *\/$/;"	e	enum:ITS_CMD
ITS_ACK_USER_QUERY	inc/itsip.h	/^    ITS_ACK_USER_QUERY	  = 0xae,\/*!< Ack for User accunt query *\/$/;"	e	enum:ITS_CMD
ITS_ACK_USER_SET	inc/itsip.h	/^    ITS_ACK_USER_SET      = 0xb5,\/*!< ACK for User account setup *\/$/;"	e	enum:ITS_CMD
ITS_CMD	inc/itsip.h	/^enum ITS_CMD$/;"	g
ITS_CONF_QUERY	inc/itsip.h	/^    ITS_CONF_QUERY        = 0xa2,\/\/!< Configuration Query$/;"	e	enum:ITS_CMD
ITS_CONF_SET	inc/itsip.h	/^    ITS_CONF_SET          = 0xa3,\/\/!< Configuration Setup$/;"	e	enum:ITS_CMD
ITS_CONN_TEST	inc/itsip.h	/^    ITS_CONN_TEST         = 0xa8,\/\/!< Network connection test$/;"	e	enum:ITS_CMD
ITS_DELETE	inc/itsip.h	/^    ITS_DELETE            = 0xa9,\/\/!< File remove$/;"	e	enum:ITS_CMD
ITS_HEAD	inc/itsip.h	/^    ITS_HEAD              = 0xff,\/\/!< ITSIP head$/;"	e	enum:ITS_CMD
ITS_KEEPLIVE	inc/itsip.h	/^    ITS_KEEPLIVE          = 0xad,\/\/!< Keep alive$/;"	e	enum:ITS_CMD
ITS_LOGIN	inc/itsip.h	/^    ITS_LOGIN             = 0xa0,\/\/!< User login$/;"	e	enum:ITS_CMD
ITS_LOGOUT	inc/itsip.h	/^    ITS_LOGOUT            = 0xaa,\/\/!< Logout$/;"	e	enum:ITS_CMD
ITS_LOG_QUERY	inc/itsip.h	/^    ITS_LOG_QUERY         = 0xa4,\/\/!< System Log Query$/;"	e	enum:ITS_CMD
ITS_SYSINFO_QUERY	inc/itsip.h	/^    ITS_SYSINFO_QUERY     = 0xa1,\/\/!< System Information Query$/;"	e	enum:ITS_CMD
ITS_SYSUP_LOGIN	inc/itsip.h	/^    ITS_SYSUP_LOGIN       = 0xa7,\/\/!< System upgrade login$/;"	e	enum:ITS_CMD
ITS_SYS_UP	inc/itsip.h	/^    ITS_SYS_UP            = 0xa6,\/\/!< System upgrade$/;"	e	enum:ITS_CMD
ITS_TALK_REQ	inc/itsip.h	/^    ITS_TALK_REQ          = 0xac,\/\/!< Talking request$/;"	e	enum:ITS_CMD
ITS_TIME_SET	inc/itsip.h	/^    ITS_TIME_SET          = 0xab,\/\/!< Time setup$/;"	e	enum:ITS_CMD
ITS_USER_QUERY	inc/itsip.h	/^		ITS_USER_QUERY		  = 0xae,\/\/!< User accunt query$/;"	e	enum:ITS_CMD
ITS_USER_SET	inc/itsip.h	/^    ITS_USER_SET          = 0xa5,\/\/!< User account setup$/;"	e	enum:ITS_CMD
LF	inc/config.h	/^    BYTE  LF;$/;"	m	struct:tagCONFIG_MODE
LOCK_t	inc/thread.h	/^typedef pthread_mutex_t	LOCK_t;$/;"	t
LOGIN_SUCCESS	inc/cmd_def.h	/^	LOGIN_SUCCESS = 1,$/;"	e	enum:USER_LOGIN
LONG	inc/def.h	/^typedef signed int              LONG;$/;"	t
LVL_SYS	inc/console.h	30;"	d
LVL_USR	inc/console.h	31;"	d
MAX_COM_PORT	inc/config.h	28;"	d
MAX_LENGTH	inc/itsip.h	83;"	d
MAX_SESSION	inc/config.h	29;"	d
MAX_USR_NUM	inc/config.h	30;"	d
MIN	src/utelnetd.c	91;"	d	file:
NAME_LEN	inc/console.h	27;"	d
NET_CONN_INFO	inc/net.h	/^} NET_CONN_INFO, *pNET_CONN_INFO;$/;"	t	typeref:struct:tagNET_CONN_INFO
NO	inc/def.h	93;"	d
NO_USER	inc/cmd_def.h	/^	NO_USER,$/;"	e	enum:USER_LOGIN
NULL	inc/def.h	82;"	d
OBJS	Makefile	/^OBJS	=						\\$/;"	m
OFF	inc/def.h	92;"	d
ON	inc/def.h	91;"	d
One_flag	src/utelnetd.c	/^static int One_flag = 0;\/\/\/\/\/\/\/\/\/$/;"	v	file:
PARAM	inc/def.h	/^typedef unsigned int            PARAM;$/;"	t
PARTAB_SZ	src/console.c	43;"	d	file:
PAR_TAB	inc/console.h	/^} PAR_TAB;$/;"	t	typeref:struct:__anon1
PRODUCT_NAME	inc/system.h	25;"	d
PROGRAM_VERSION	inc/system.h	26;"	d
ParseProc	inc/console.h	/^    void	(*ParseProc)();$/;"	m	struct:__anon1
ParseStr	inc/console.h	/^    char	*ParseStr;$/;"	m	struct:__anon1
ParseTable	src/console.c	/^PAR_TAB ParseTable[] =$/;"	v
RC_NORIGHT	inc/cmd_def.h	/^    RC_NORIGHT,$/;"	e	enum:USER_SET_RETURN_CODE
RC_NOUSR	inc/cmd_def.h	/^    RC_NOUSR,$/;"	e	enum:USER_SET_RETURN_CODE
RC_USRADDFAILED	inc/cmd_def.h	/^    RC_USRADDFAILED,$/;"	e	enum:USER_SET_RETURN_CODE
RC_USRADDOK	inc/cmd_def.h	/^    RC_USRADDOK,$/;"	e	enum:USER_SET_RETURN_CODE
RC_USRDELFAILED	inc/cmd_def.h	/^    RC_USRDELFAILED,$/;"	e	enum:USER_SET_RETURN_CODE
RC_USRDELOK	inc/cmd_def.h	/^    RC_USRDELOK,$/;"	e	enum:USER_SET_RETURN_CODE
RC_USREXIST	inc/cmd_def.h	/^    RC_USREXIST,$/;"	e	enum:USER_SET_RETURN_CODE
RC_USRMODFAILED	inc/cmd_def.h	/^    RC_USRMODFAILED,$/;"	e	enum:USER_SET_RETURN_CODE
RC_USRMODOK	inc/cmd_def.h	/^    RC_USRMODOK,$/;"	e	enum:USER_SET_RETURN_CODE
RTS	inc/config.h	/^    BYTE  RTS;$/;"	m	struct:tagCONFIG_COM
RXBUF_SZ	inc/console.h	26;"	d
SEM_t	inc/thread.h	/^typedef sem_t			SEM_t;$/;"	t
SQWORD	inc/def.h	/^typedef long long               SQWORD;$/;"	t
SRC	Makefile	/^SRC = .\/src\/$/;"	m
STRING	inc/def.h	/^typedef BYTE *                  STRING;$/;"	t
SUCCESS	inc/def.h	95;"	d
TELCMDS	src/utelnetd.c	77;"	d	file:
TELOPTS	src/utelnetd.c	78;"	d	file:
TIMEOUT_CNT	inc/net.h	24;"	d
TRD_t	inc/thread.h	/^typedef pthread_t		TRD_t;$/;"	t
TS_LOCK	inc/thread.h	28;"	d
TS_UNLOCK	inc/thread.h	29;"	d
TelnetPort	src/main.c	/^int TelnetPort = 6000;\/\/console port$/;"	v
UQWORD	inc/def.h	/^typedef unsigned long long      UQWORD;$/;"	t
USER_ADD	inc/cmd_def.h	/^    USER_ADD,$/;"	e	enum:USER_SET
USER_DEL	inc/cmd_def.h	/^    USER_DEL,$/;"	e	enum:USER_SET
USER_LOGIN	inc/cmd_def.h	/^enum USER_LOGIN$/;"	g
USER_MODIFY	inc/cmd_def.h	/^    USER_MODIFY, $/;"	e	enum:USER_SET
USER_SET	inc/cmd_def.h	/^enum USER_SET$/;"	g
USER_SET_RETURN_CODE	inc/cmd_def.h	/^enum USER_SET_RETURN_CODE$/;"	g
USE_ISSUE	src/utelnetd.c	41;"	d	file:
USE_SYSLOG	src/utelnetd.c	40;"	d	file:
USR_AUTH	inc/config.h	/^enum USR_AUTH$/;"	g
USR_INFO	inc/config.h	/^} USR_INFO, *p_USR_INFO;$/;"	t	typeref:struct:tagUSR_INFO
USR_NAME_LEN	inc/config.h	109;"	d
USR_NORMAL	inc/config.h	/^    USR_NORMAL,$/;"	e	enum:USR_AUTH
USR_PSW_LEN	inc/config.h	110;"	d
USR_ROOT	inc/config.h	/^    USR_ROOT,$/;"	e	enum:USR_AUTH
USR_SALT	inc/config.h	111;"	d
USR_SALT	inc/console.h	28;"	d
WEB_IP	inc/net.h	25;"	d
WEB_PORT	inc/net.h	26;"	d
WORD	inc/def.h	/^typedef unsigned short          WORD;$/;"	t
XTABS	src/utelnetd.c	72;"	d	file:
YES	inc/def.h	94;"	d
_TRD_H_	inc/thread.h	19;"	d
_UTELNET_H_	inc/utelnetd.h	9;"	d
__CMD_DEF_H__	inc/cmd_def.h	21;"	d
__CONFIG_H__	inc/config.h	20;"	d
__CONSOLE_H__	inc/console.h	20;"	d
__DEF_H__	inc/def.h	20;"	d
__ITSIP_H__	inc/itsip.h	20;"	d
__NET_H__	inc/net.h	20;"	d
__SYSTEM_H__	inc/system.h	20;"	d
__USE_GNU	src/utelnetd.c	53;"	d	file:
__USE_GNU	src/utelnetd.c	56;"	d	file:
__USE_XOPEN	src/utelnetd.c	54;"	d	file:
__USE_XOPEN	src/utelnetd.c	57;"	d	file:
alive	inc/config.h	/^    DWORD alive;$/;"	m	struct:tagCONFIG_COM
all	inc/config.h	/^    BYTE  all;$/;"	m	struct:tagCONFIG_COM
argv_init	src/utelnetd.c	/^static char *argv_init[] = {NULL, NULL};$/;"	v	file:
att	inc/config.h	/^    BYTE  att;\/\/认证提示$/;"	m	struct:tagCONFIG_MODE
attestation	inc/config.h	/^    BYTE  attestation;\/\/认证$/;"	m	struct:tagCONFIG_MODE
bctrl	inc/config.h	/^    BYTE  bctrl;$/;"	m	struct:tagCONFIG_COM
bps	inc/config.h	/^    DWORD bps;$/;"	m	struct:tagCONFIG_COM
buf1	src/utelnetd.c	/^    char *buf1, *buf2;$/;"	m	struct:tsession	file:
buf2	src/utelnetd.c	/^    char *buf1, *buf2;$/;"	m	struct:tsession	file:
chk	inc/config.h	/^    BYTE  chk;$/;"	m	struct:tagCONFIG_COM
cli_fd	src/console.c	/^static int cli_fd = -1;$/;"	v	file:
client_conn	inc/net.h	/^    int client_conn;	            \/\/!< client socket descriptor$/;"	m	struct:tagNET_CONN_INFO
client_type	inc/net.h	/^    BYTE client_type;	            \/\/!< client type$/;"	m	struct:tagNET_CONN_INFO
clientip	inc/net.h	/^    char clientip[16];$/;"	m	struct:tagNET_CONN_INFO
con_com	inc/config.h	/^    CONFIG_COM con_com[MAX_COM_PORT];$/;"	m	struct:tagCONFIG_DATA
con_lim	inc/config.h	/^    CONFIG_LIMIT con_lim[MAX_COM_PORT];$/;"	m	struct:tagCONFIG_DATA
con_mode	inc/config.h	/^    CONFIG_MODE con_mode[MAX_COM_PORT];$/;"	m	struct:tagCONFIG_DATA
con_sys	inc/config.h	/^    CONFIG_SYS  con_sys;$/;"	m	struct:tagCONFIG_DATA
con_usr	inc/config.h	/^    USR_INFO con_usr[MAX_USR_NUM];$/;"	m	struct:tagCONFIG_DATA
conn	inc/config.h	/^    BYTE  conn;$/;"	m	struct:tagCONFIG_SESSION
conn_idx	inc/net.h	/^    int conn_idx;		            \/\/!< Index of connection$/;"	m	struct:tagNET_CONN_INFO
console	src/console.c	/^static CONSOLE console;$/;"	v	file:
console_cmd_parse	src/console.c	/^static void console_cmd_parse(void)$/;"	f	file:
console_dev	src/console.c	/^static void console_dev(void)$/;"	f	file:
console_help	src/console.c	/^static void console_help(void)$/;"	f	file:
console_log	src/console.c	/^static void console_log(void)$/;"	f	file:
console_logout	src/console.c	/^static void console_logout(void)$/;"	f	file:
console_net_conf	src/console.c	/^static void console_net_conf(void)$/;"	f	file:
console_param_get	src/console.c	/^char* console_param_get(BYTE pos)$/;"	f
console_proc	src/console.c	/^void console_proc(void)$/;"	f
console_reboot	src/console.c	/^static void console_reboot(void)$/;"	f	file:
console_sysinfo	src/console.c	/^static void console_sysinfo(void)$/;"	f	file:
console_system_cmd	src/console.c	/^static void console_system_cmd(void)$/;"	f	file:
console_usr_conf	src/console.c	/^static void console_usr_conf(void)$/;"	f	file:
console_ver_conf	src/console.c	/^static void console_ver_conf(void)$/;"	f	file:
data	inc/itsip.h	/^    BYTE data[MAX_LENGTH];	\/\/!< external data, 1024 bytes$/;"	m	struct:tagITSIP_PKT
dbit	inc/config.h	/^    BYTE  dbit;$/;"	m	struct:tagCONFIG_COM
dev_dhcp	inc/config.h	/^    BOOL  dev_dhcp;$/;"	m	struct:tagCONFIG_SYS
dev_gw	inc/config.h	/^    DWORD dev_gw;	\/\/gate way$/;"	m	struct:tagCONFIG_SYS
dev_ip	inc/config.h	/^    DWORD dev_ip;$/;"	m	struct:tagCONFIG_SYS
dev_mac	inc/config.h	/^    BYTE  dev_mac[6];$/;"	m	struct:tagCONFIG_SYS
dev_nm	inc/config.h	/^    DWORD dev_nm;	\/\/net mask$/;"	m	struct:tagCONFIG_SYS
dhcp_id	inc/config.h	/^    DWORD dhcp_id;$/;"	m	struct:tagCONFIG_SYS
dis_conn	inc/config.h	/^    BYTE  dis_conn;$/;"	m	struct:tagCONFIG_SESSION
dns	inc/config.h	/^    DWORD dns[2];$/;"	m	struct:tagCONFIG_SYS
do_console_cmd	src/console.c	/^static void do_console_cmd(int fd)$/;"	f	file:
dport	inc/config.h	/^    DWORD dport;$/;"	m	struct:tagCONFIG_SESSION
enable	inc/config.h	/^    BYTE enable;$/;"	m	struct:tagCONFIG_LIMIT
error_msg_and_die	src/utelnetd.c	/^void error_msg_and_die(char *text)$/;"	f
file_type	inc/net.h	/^    BYTE file_type;		            \/\/!< file type, 0 - picture, 1 - video, 2 -- break-point continue$/;"	m	struct:tagNET_CONN_INFO
free_session	src/utelnetd.c	/^free_session(struct tsession *ts)$/;"	f	file:
g_status	src/console.c	/^static int g_status = 0;$/;"	v	file:
getpt	src/utelnetd.c	73;"	d	file:
getpty	src/utelnetd.c	/^static int getpty(char *line)$/;"	f	file:
head	inc/itsip.h	/^    ITSIP head;				\/\/!< ITSIP head$/;"	m	struct:tagITSIP_PKT
host_name	inc/config.h	/^    char  host_name[32];$/;"	m	struct:tagCONFIG_SYS
host_pos	inc/config.h	/^    char  host_pos[32];$/;"	m	struct:tagCONFIG_SYS
host_ver	inc/config.h	/^    char  host_ver[32];$/;"	m	struct:tagCONFIG_SYS
id	inc/config.h	/^    BYTE id;$/;"	m	struct:tagCONFIG_LIMIT
id	inc/config.h	/^    DWORD id;$/;"	m	struct:tagCONFIG_COM
id	inc/config.h	/^    DWORD id;$/;"	m	struct:tagCONFIG_MODE
idle	inc/net.h	/^    BYTE idle;	            		\/\/!< idle time count$/;"	m	struct:tagNET_CONN_INFO
idletime	inc/console.h	/^    BYTE    idletime;$/;"	m	struct:tagCONSOLE
ip	inc/config.h	/^    DWORD ip;$/;"	m	struct:tagCONFIG_SESSION
is_null	inc/config.h	/^    BYTE  is_null;$/;"	m	struct:tagCONFIG_MODE
its_conf_com_query	src/console.c	/^int its_conf_com_query(char* name, CONFIG_COM* con_com)$/;"	f
its_conf_com_set	src/console.c	/^int its_conf_com_set(char* name, CONFIG_COM* con_com)$/;"	f
its_conf_lim_query	src/console.c	/^int its_conf_lim_query(char* name, CONFIG_LIMIT* con_lim)$/;"	f
its_conf_lim_set	src/console.c	/^int its_conf_lim_set(char* name, CONFIG_LIMIT* con_lim)$/;"	f
its_conf_mode_query	src/console.c	/^int its_conf_mode_query(char* name, CONFIG_MODE* con_mode)$/;"	f
its_conf_mode_set	src/console.c	/^int its_conf_mode_set(char* name, CONFIG_MODE* con_mode)$/;"	f
its_sysinfo_query	src/console.c	/^int its_sysinfo_query(char* name, CONFIG_SYS* con_sys)$/;"	f
its_user_add	src/console.c	/^int its_user_add(char* name, USR_INFO* con_usr)$/;"	f
its_user_del	src/console.c	/^int its_user_del(char* name, USR_INFO* con_usr)$/;"	f
its_user_modify	src/console.c	/^int its_user_modify(char* name, USR_INFO* con_usr)$/;"	f
its_user_query	src/console.c	/^int its_user_query(char* name, USR_INFO* con_usr)$/;"	f
itsip_cmd	inc/itsip.h	/^    BYTE itsip_cmd;      \/\/!< command$/;"	m	struct:tagITSIP
itsip_data	inc/itsip.h	/^    BYTE itsip_data[24]; \/\/!< data$/;"	m	struct:tagITSIP
itsip_dev_t	inc/itsip.h	/^    BYTE itsip_dev_t;    \/\/!< Device types$/;"	m	struct:tagITSIP
itsip_extlen	inc/itsip.h	/^    WORD itsip_extlen;   \/\/!< external data length$/;"	m	struct:tagITSIP
itsip_head	inc/itsip.h	/^    BYTE itsip_head;     \/\/!< head, 0xff$/;"	m	struct:tagITSIP
itsip_pack	src/itsip.c	/^inline void itsip_pack(BYTE cmd, WORD extlen, BYTE dev_t, void *data, ITSIP_PACKET *its_pkt)$/;"	f
itsip_rsvd	inc/itsip.h	/^    BYTE itsip_rsvd;     \/\/!< Reserved byte$/;"	m	struct:tagITSIP
itsip_thl	inc/itsip.h	/^    BYTE itsip_thl;      \/\/!< the head length$/;"	m	struct:tagITSIP
itsip_user	inc/itsip.h	/^    BYTE itsip_user[24]; \/\/!< User$/;"	m	struct:tagITSIP
itsip_ver	inc/itsip.h	/^    BYTE itsip_ver;      \/\/!< protocol version$/;"	m	struct:tagITSIP
level	inc/console.h	/^    int		level;					\/\/!< ..$/;"	m	struct:__anon1
lock	inc/net.h	/^    LOCK_t lock;$/;"	m	struct:tagNET_CONN_INFO
loginpath	src/utelnetd.c	/^static char *loginpath = NULL;$/;"	v	file:
lport	inc/config.h	/^    DWORD lport;$/;"	m	struct:tagCONFIG_SESSION
main	src/main.c	/^int main ( int argc, char* argv[] )$/;"	f
make_new_session	src/utelnetd.c	/^make_new_session(int sockfd)$/;"	f	file:
max_num	inc/config.h	/^    BYTE  max_num;$/;"	m	struct:tagCONFIG_SESSION
maxfd	src/utelnetd.c	/^static int maxfd;$/;"	v	file:
mode	inc/config.h	/^    BYTE  mode;$/;"	m	struct:tagCONFIG_MODE
mode	inc/config.h	/^    BYTE  mode;$/;"	m	struct:tagCONFIG_SYS
modify	inc/config.h	/^    BYTE modify[MAX_USR_NUM];$/;"	m	struct:tagCONFIG_LIMIT
name	inc/console.h	/^    char	name[32];				\/\/!< 登陆用户名称$/;"	m	struct:tagCONSOLE
net_close	src/console.c	/^void net_close(void *fd1)$/;"	f
net_conn_close	src/net.c	/^void net_conn_close(NET_CONN_INFO *conn_info)$/;"	f
net_conn_connect	src/net.c	/^int net_conn_connect(NET_CONN_INFO *conn_info)$/;"	f
net_conn_recv	src/net.c	/^int net_conn_recv(NET_CONN_INFO *conn_info, void* data, DWORD len)$/;"	f
net_conn_send	src/net.c	/^int net_conn_send(NET_CONN_INFO *conn_info, ITSIP *net_head, BYTE* net_data, DWORD len)$/;"	f
net_conn_send_pkt	src/net.c	/^int net_conn_send_pkt(NET_CONN_INFO *conn_info, void *net_data, int len)$/;"	f
next	src/utelnetd.c	/^    struct tsession *next;$/;"	m	struct:tsession	typeref:struct:tsession::tsession	file:
pNET_CONN_INFO	inc/net.h	/^} NET_CONN_INFO, *pNET_CONN_INFO;$/;"	t	typeref:struct:tagNET_CONN_INFO
p_ITSIP	inc/itsip.h	/^} ITSIP, *p_ITSIP;$/;"	t	typeref:struct:tagITSIP
p_ITSIP_PACKET	inc/itsip.h	/^} ITSIP_PACKET, *p_ITSIP_PACKET;$/;"	t	typeref:struct:tagITSIP_PKT
p_USR_INFO	inc/config.h	/^} USR_INFO, *p_USR_INFO;$/;"	t	typeref:struct:tagUSR_INFO
params	inc/console.h	/^    BYTE	params;					\/\/!< 参数数量$/;"	m	struct:tagCONSOLE
partab	inc/console.h	/^    char	partab[8][32];			\/\/!< 参数列表$/;"	m	struct:tagCONSOLE
perror_msg_and_die	src/utelnetd.c	/^void perror_msg_and_die(char *text)$/;"	f
print_debug	src/console.c	/^void print_debug(int fd)$/;"	f
print_login	src/console.c	/^void print_login(int fd)$/;"	f
print_passwd	src/console.c	/^void print_passwd(int fd)$/;"	f
protocol	inc/config.h	/^    DWORD protocol;$/;"	m	struct:tagCONFIG_SESSION
ptyfd	src/utelnetd.c	/^    int sockfd, ptyfd;$/;"	m	struct:tsession	file:
rdidx1	src/utelnetd.c	/^    int rdidx1, wridx1, size1;$/;"	m	struct:tsession	file:
rdidx2	src/utelnetd.c	/^    int rdidx2, wridx2, size2;$/;"	m	struct:tsession	file:
read	inc/config.h	/^    BYTE read[MAX_USR_NUM];$/;"	m	struct:tagCONFIG_LIMIT
reg	inc/config.h	/^    BYTE  reg;$/;"	m	struct:tagCONFIG_MODE
remove_iacs	src/utelnetd.c	/^remove_iacs(unsigned char *bf, int len, int *processed, int *num_totty)$/;"	f	file:
reserved	inc/config.h	/^    BYTE reserved[3];	           \/\/!<$/;"	m	struct:tagUSR_INFO
right	inc/console.h	/^    BYTE	right;					\/\/!< 登陆者权限$/;"	m	struct:tagCONSOLE
rsvd	inc/config.h	/^    BYTE  rsvd[13];$/;"	m	struct:tagCONFIG_SYS
rsvd	inc/config.h	/^    BYTE  rsvd[3];$/;"	m	struct:tagCONFIG_SESSION
rsvd	inc/config.h	/^    BYTE  rsvd[5];$/;"	m	struct:tagCONFIG_COM
rsvd	inc/config.h	/^    BYTE  rsvd[5];$/;"	m	struct:tagCONFIG_MODE
rxbuf	inc/console.h	/^    char	rxbuf[RXBUF_SZ];		\/\/!< 接收缓冲$/;"	m	struct:tagCONSOLE
rxlen	inc/console.h	/^    BYTE	rxlen;					\/\/!< 接收总长$/;"	m	struct:tagCONSOLE
sbit	inc/config.h	/^    DWORD sbit;$/;"	m	struct:tagCONFIG_COM
send_iac	src/utelnetd.c	/^send_iac(struct tsession *ts, unsigned char command, int option)$/;"	f	file:
session	inc/config.h	/^    CONFIG_SESSION  session[MAX_SESSION];$/;"	m	struct:tagCONFIG_MODE
sessions	src/utelnetd.c	/^static struct tsession *sessions;$/;"	v	typeref:struct:tsession	file:
shell_pid	src/utelnetd.c	/^    int shell_pid;$/;"	m	struct:tsession	file:
show_usage	src/utelnetd.c	/^void show_usage(void)$/;"	f
size1	src/utelnetd.c	/^    int rdidx1, wridx1, size1;$/;"	m	struct:tsession	file:
size2	src/utelnetd.c	/^    int rdidx2, wridx2, size2;$/;"	m	struct:tsession	file:
socket_init	src/console.c	/^int socket_init(DWORD port, DWORD max_conn)$/;"	f
sockfd	src/utelnetd.c	/^    int sockfd, ptyfd;$/;"	m	struct:tsession	file:
status	inc/console.h	/^    BYTE	status;					\/\/!< 控制台状态$/;"	m	struct:tagCONSOLE
sys_ip2str_static	src/system.c	/^char* sys_ip2str_static ( DWORD ip )$/;"	f
sys_str2ip	src/system.c	/^DWORD sys_str2ip ( char *str )$/;"	f
sys_version_show	src/system.c	/^void sys_version_show ( FILE *stream )$/;"	f
system_mscount_get	src/system.c	/^UQWORD system_mscount_get(void)$/;"	f
tagCONFIG_COM	inc/config.h	/^typedef struct tagCONFIG_COM$/;"	s
tagCONFIG_DATA	inc/config.h	/^typedef struct tagCONFIG_DATA$/;"	s
tagCONFIG_LIMIT	inc/config.h	/^typedef struct tagCONFIG_LIMIT$/;"	s
tagCONFIG_MODE	inc/config.h	/^typedef struct tagCONFIG_MODE$/;"	s
tagCONFIG_SESSION	inc/config.h	/^typedef struct tagCONFIG_SESSION$/;"	s
tagCONFIG_SYS	inc/config.h	/^typedef struct tagCONFIG_SYS$/;"	s
tagCONSOLE	inc/console.h	/^typedef struct tagCONSOLE$/;"	s
tagITSIP	inc/itsip.h	/^typedef struct tagITSIP$/;"	s
tagITSIP_PKT	inc/itsip.h	/^typedef struct tagITSIP_PKT$/;"	s
tagNET_CONN_INFO	inc/net.h	/^typedef struct tagNET_CONN_INFO$/;"	s
tagUSR_INFO	inc/config.h	/^typedef struct tagUSR_INFO$/;"	s
tcp_mode	inc/config.h	/^    BYTE  tcp_mode;$/;"	m	struct:tagCONFIG_MODE
telnet_main	src/utelnetd.c	/^int telnet_main(void *arg)$/;"	f
time_out	inc/config.h	/^    BYTE  time_out;$/;"	m	struct:tagCONFIG_SESSION
time_out	inc/config.h	/^    DWORD time_out;$/;"	m	struct:tagCONFIG_SYS
trd_create	src/thread.c	/^int trd_create(TRD_t *trd_id, void *(*func)(void *), void *arg)$/;"	f
trd_lock_init	src/thread.c	/^inline void trd_lock_init(LOCK_t *lock)$/;"	f
tsession	src/utelnetd.c	/^struct tsession$/;"	s	file:
type	inc/config.h	/^    BYTE  type;		\/\/RS232\/RS485$/;"	m	struct:tagCONFIG_COM
uid	inc/console.h	/^    BYTE	uid;					\/\/!< 登陆者权限$/;"	m	struct:tagCONSOLE
user_login	src/console.c	/^static BOOL user_login(char *name, char* psw)$/;"	f	file:
usr_auth	inc/config.h	/^    BYTE usr_auth;	               \/\/!< user authority, 0 - guest, 1 - normal user，2-administrator，3-super user$/;"	m	struct:tagUSR_INFO
usr_id	inc/config.h	/^    WORD usr_id;$/;"	m	struct:tagUSR_INFO
usr_name	inc/config.h	/^    BYTE usr_name[USR_NAME_LEN];   \/\/!< user name$/;"	m	struct:tagUSR_INFO
usr_passwd	inc/config.h	/^    BYTE usr_passwd[USR_PSW_LEN];  \/\/!< password$/;"	m	struct:tagUSR_INFO
usr_state	inc/config.h	/^    BYTE usr_state;                \/\/!< user state$/;"	m	struct:tagUSR_INFO
usr_system	src/console.c	/^int usr_system(const char* cmdstring)$/;"	f
wridx1	src/utelnetd.c	/^    int rdidx1, wridx1, size1;$/;"	m	struct:tsession	file:
wridx2	src/utelnetd.c	/^    int rdidx2, wridx2, size2;$/;"	m	struct:tsession	file:
